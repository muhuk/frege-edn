module com.muhuk.EDNTest where


import com.muhuk.EDN


test :: (Eq a, Show a) => a -> a -> IO ()
test expected actual = println $ if (expected == actual)
    then  "✓ " ++ (show' expected)
    else "✗ " ++ (show' expected) ++ " =/= " ++ (show' actual) where
    show' = unescapeQuotes • trimQuotes • show
    trimQuotes v = substr v 1 (length v - 1)
    unescapeQuotes v = v.replaceAll ´\\"´ "\""


main = do
    println "Test results:\n\n"
    test "prn" $ encodeNamespaced (Namespaced "" "prn")
    test "clojure.core/ns" $ encodeNamespaced (Namespaced "clojure.core" "ns")
    test "nil" $ encodeValue Nil
    test "true" $ encodeValue (Boolean true)
    test "false" $ encodeValue (Boolean false)

    test "\"abc\"" $ encode "abc"
    test "nil" $ encode (Nothing:: Maybe String)
    test "\"x\"" $ encode (Just "x")
    println "\n\n"
